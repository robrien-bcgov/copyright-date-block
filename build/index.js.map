{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AAC2E;;AAE3E;AACA;AACA;AACA;AAC+D;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASK,IAAIA,CAAC;EAAEC,UAAU;EAAEC;AAAc,CAAC,EAAE;EAC3D,MAAM;IAAEC;EAAa,CAAC,GAAGF,UAAU;EACnC,MAAMG,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;EACvD,OACCC,oDAAA,CAAAC,2CAAA,QACCD,oDAAA,CAACX,sEAAiB,QACjBW,oDAAA,CAACV,4DAAS;IAACY,KAAK,EAAEf,mDAAE,CAAC,UAAU,EAAE,sBAAsB;EAAE,GACxDa,oDAAA,CAACT,8DAAW;IACXY,KAAK,EAAEhB,mDAAE,CAAC,eAAe,EAAE,sBAAsB,CAAE;IACnDiB,KAAK,EAAET,YAAa;IACpBU,QAAQ,EAAGC,eAAe,IAAK;MAC9B;MACAZ,aAAa,CAAC;QAAEC,YAAY,EAAEW;MAAgB,CAAC,CAAC;IACjD;EAAE,CACF,CACS,CACO,CAAC,EACpBN,oDAAA;IAAA,GAAOZ,sEAAa,CAAC;EAAC,GACpBD,mDAAE,CAAC,WAAW,EAAE,sBAAsB,CAAC,EAAC,OAClC,EAACQ,YAAY,EAAC,KAAG,EAACC,WACvB,CACF,CAAC;AAEL;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACwD;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASW,IAAIA,CAAC;EAAEd;AAAW,CAAC,EAAE;EAC5C,MAAM;IAAEE;EAAa,CAAC,GAAGF,UAAU;EACnC,MAAMG,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;EACvD,OACCC,oDAAA;IAAA,GAAOZ,kEAAa,CAACmB,IAAI,CAAC;EAAC,GACzB,WAAW,EAAC,QAAQ,EAACZ,YAAY,EAAC,KAAG,EAACC,WACrC,CAAC;AAEN;;;;;;;;;;ACzBA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACsB;;AAEtB;AACA;AACA;AAC0B;AACA;AACU;;AAEpC;AACA;AACA;AACA;AACA;AACAY,oEAAiB,CAACC,6CAAa,EAAE;EAChC;AACD;AACA;EACCE,IAAI,EAAEnB,6CAAI;EAEV;AACD;AACA;EACCe,IAAI,gDAAE;AACP,CAAC,CAAC,C","sources":["webpack://copyright-date-block/./src/edit.js","webpack://copyright-date-block/./src/save.js","webpack://copyright-date-block/external window \"React\"","webpack://copyright-date-block/external window [\"wp\",\"blockEditor\"]","webpack://copyright-date-block/external window [\"wp\",\"blocks\"]","webpack://copyright-date-block/external window [\"wp\",\"components\"]","webpack://copyright-date-block/external window [\"wp\",\"i18n\"]","webpack://copyright-date-block/webpack/bootstrap","webpack://copyright-date-block/webpack/runtime/compat get default export","webpack://copyright-date-block/webpack/runtime/define property getters","webpack://copyright-date-block/webpack/runtime/hasOwnProperty shorthand","webpack://copyright-date-block/webpack/runtime/make namespace object","webpack://copyright-date-block/./src/index.js"],"sourcesContent":["/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-i18n/\n */\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { useBlockProps, InspectorControls } from \"@wordpress/block-editor\";\n\n/**\n * React components to add controls to the block sidebar editor.\n *\n */\nimport { PanelBody, TextControl } from \"@wordpress/components\";\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * Those files can contain any CSS code that gets applied to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\n// Removed this file, since the copyright-date-block doesn't need any styling in the editor sidebar.\n// import \"./editor.scss\";\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#edit\n *\n * @return {Element} Element to render.\n */\nexport default function Edit({ attributes, setAttributes }) {\n\tconst { startingYear } = attributes;\n\tconst currentYear = new Date().getFullYear().toString();\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={__(\"Settings\", \"copyright-date-block\")}>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel={__(\"Starting Year\", \"copyright-date-block\")}\n\t\t\t\t\t\tvalue={startingYear}\n\t\t\t\t\t\tonChange={(newStartingYear) => {\n\t\t\t\t\t\t\t// update startingYear with newValue\n\t\t\t\t\t\t\tsetAttributes({ startingYear: newStartingYear });\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<p {...useBlockProps()}>\n\t\t\t\t{__(\"Copyright\", \"copyright-date-block\")}\n\t\t\t\t&copy; {startingYear} - {currentYear}\n\t\t\t</p>\n\t\t</>\n\t);\n}\n","/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { useBlockProps } from \"@wordpress/block-editor\";\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#save\n *\n * @return {Element} Element to render.\n */\nexport default function save({ attributes }) {\n\tconst { startingYear } = attributes;\n\tconst currentYear = new Date().getFullYear().toString();\n\treturn (\n\t\t<p {...useBlockProps.save()}>\n\t\t\t{\"Copyright\"} &copy; {startingYear} - {currentYear}\n\t\t</p>\n\t);\n}\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from \"@wordpress/blocks\";\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport \"./style.scss\";\n\n/**\n * Internal dependencies\n */\nimport Edit from \"./edit\";\nimport save from \"./save\";\nimport metadata from \"./block.json\";\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType(metadata.name, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\n\t/**\n\t * @see ./save.js\n\t */\n\tsave, // shorthand because the component exported in save.js is also called `save`\n});\n"],"names":["__","useBlockProps","InspectorControls","PanelBody","TextControl","Edit","attributes","setAttributes","startingYear","currentYear","Date","getFullYear","toString","createElement","Fragment","title","label","value","onChange","newStartingYear","save","registerBlockType","metadata","name","edit"],"sourceRoot":""}